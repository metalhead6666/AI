/*
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package net.sf.jclal.core;

import java.util.EventObject;

/**
 * Algorithm event.
 *
 * @author Sebastian Ventura
 */
public class AlgorithmEvent extends EventObject {
    /////////////////////////////////////////////////////////////////
    // --------------------------------------- Serialization constant
    /////////////////////////////////////////////////////////////////

    /**
     * Generated by Eclipse
     */
    private static final long serialVersionUID = -485187902934505060L;

    /////////////////////////////////////////////////////////////////
    // --------------------------------------------------- Attributes
    /////////////////////////////////////////////////////////////////
    /**
     * Algorithm
     */
    protected IAlgorithm algorithm;

    /**
     * Exception
     */
    protected Exception exception;

    /////////////////////////////////////////////////////////////////
    // ------------------------------------------------- Constructors
    /////////////////////////////////////////////////////////////////
    /**
     * Constructor
     *
     * @param algorithm The algorithm to use.
     */
    public AlgorithmEvent(IAlgorithm algorithm) {
        this(algorithm, null);
    }

    /**
     *
     * @param algorithm The algorithm to use.
     * @param exception The exception that can be launched.
     */
    public AlgorithmEvent(IAlgorithm algorithm, Exception exception) {
        super(algorithm);
        this.algorithm = algorithm;
        this.exception = exception;
    }

    /////////////////////////////////////////////////////////////////
    // ----------------------------------------------- Public methods
    /////////////////////////////////////////////////////////////////
    // Accessors
    /**
     * Access to algorithm.
     *
     * @return Actual algorithm
     */
    public final IAlgorithm getAlgorithm() {
        return algorithm;
    }

    /**
     * Access to event exception.
     *
     * @return Actual exception (null if none)
     */
    public final Exception getException() {
        return exception;
    }
}
